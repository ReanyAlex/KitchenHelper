// <auto-generated />
using KitchenHelper.API.Data.Database.Sql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KitchenHelper.API.Data.Migrations
{
    [DbContext(typeof(KitchenHelperDbContext))]
    [Migration("20200807201729_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KitchenHelper.API.Data.Entities.DbEntities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Milk"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cookie"
                        });
                });

            modelBuilder.Entity("KitchenHelper.API.Data.Entities.DbEntities.Measurement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ShortHand")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Measurements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cup",
                            ShortHand = "C"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Each",
                            ShortHand = "Each"
                        });
                });

            modelBuilder.Entity("KitchenHelper.API.Data.Entities.DbEntities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Test",
                            Description = "A nice cold glass of milk",
                            Name = "Cup of Milk"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Test",
                            Description = "A nice cold glass of milk with cookies",
                            Name = "Cup of Milk With Cookies"
                        });
                });

            modelBuilder.Entity("KitchenHelper.API.Data.Entities.DbEntities.RecipeIngredientInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredientInformation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientId = 1,
                            MeasurementId = 1,
                            Quantity = 2,
                            RecipeId = 1
                        });
                });

            modelBuilder.Entity("KitchenHelper.API.Data.Entities.DbEntities.RecipeStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasColumnType("nvarchar(2500)")
                        .HasMaxLength(2500);

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeStep");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Order = 1,
                            RecipeId = 1,
                            Step = "Drink Milk"
                        },
                        new
                        {
                            Id = 2,
                            Order = 1,
                            RecipeId = 2,
                            Step = "Drink Milk"
                        },
                        new
                        {
                            Id = 3,
                            Order = 2,
                            RecipeId = 2,
                            Step = "Eat Cookie"
                        });
                });

            modelBuilder.Entity("KitchenHelper.API.Data.Entities.DbEntities.RecipeIngredientInformation", b =>
                {
                    b.HasOne("KitchenHelper.API.Data.Entities.DbEntities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KitchenHelper.API.Data.Entities.DbEntities.Measurement", "Measurement")
                        .WithMany()
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KitchenHelper.API.Data.Entities.DbEntities.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KitchenHelper.API.Data.Entities.DbEntities.RecipeStep", b =>
                {
                    b.HasOne("KitchenHelper.API.Data.Entities.DbEntities.Recipe", "Recipe")
                        .WithMany("RecipeSteps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
